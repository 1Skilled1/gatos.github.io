#gato1{
    float: left;
    margin-top: 50px;
}
@media screen and (max-width: 600px) {
    #gato1{
        margin-left: 150px;
        margin-top: -35px;
    }
}
#gato2{
    text-align: center;
    margin-left: 500px;
}
@media screen and (max-width: 600px) {
    #gato2{
        margin-left: 100px;
        margin-bottom: -15px;
    }
}
#gato3{
    float: right; 
}
/*
Las propiedades personalizadas (también conocidas como variables) son entidades definidas por 
autores de CSS que contienen valores específicos que se pueden volver a utilizar en un documento.


Las propiedades personalizadas tienen como alcance los elementos en los que se declaran y 
participan en la cascada: el valor de dicha propiedad personalizada es el de la declaración 
decidida por el algoritmo en cascada */

/* La pseudo-clase :root de CSS selecciona el elemento raíz de un árbol que representa el documento.
En HTML, :root representa el elemento <html> y es idéntico al selector html , excepto que su 
especificidad es mayor*/
:root {
  /* dark shades of primary color*/
  --clr-primary-1: hsl(205, 86%, 17%);
  --clr-primary-2: hsl(205, 77%, 27%);
  --clr-primary-3: hsl(205, 72%, 37%);
  --clr-primary-4: hsl(205, 63%, 48%);
  /* primary/main color */
  --clr-primary-5: #49a6e9;
  /* lighter shades of primary color */
  --clr-primary-6: hsl(205, 89%, 70%);
  --clr-primary-7: hsl(205, 90%, 76%);
  --clr-primary-8: hsl(205, 86%, 81%);
  --clr-primary-9: hsl(205, 90%, 88%);
  --clr-primary-10: hsl(205, 100%, 96%);
  /* darkest grey - used for headings */
  --clr-grey-1: hsl(209, 61%, 16%);
  --clr-grey-2: hsl(211, 39%, 23%);
  --clr-grey-3: hsl(209, 34%, 30%);
  --clr-grey-4: hsl(209, 28%, 39%);
  /* grey used for paragraphs */
  --clr-grey-5: hsl(210, 22%, 49%);
  --clr-grey-6: hsl(209, 23%, 60%);
  --clr-grey-7: hsl(211, 27%, 70%);
  --clr-grey-8: hsl(210, 31%, 80%);
  --clr-grey-9: hsl(212, 33%, 89%);
  --clr-grey-10: hsl(210, 36%, 96%);
  --clr-white: #fff;
  --clr-gold: #c59d5f;
  --clr-black: #222;
  --ff-primary: "Roboto", sans-serif;
  --ff-secondary: "Open Sans", sans-serif;
  --transition: all 0.3s linear;
  --spacing: 0.25rem;
  --radius: 0.5rem;
  --light-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  --dark-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  --max-width: 1170px;
  --fixed-width: 620px;
}

/*
=============== 
Estilo Global
===============
*/
*{
    box-sizing: border-box;
}
body {
  font-family: var(--ff-secondary);
  background: var(--clr-grey-10);
  color: var(--clr-grey-1);
  line-height: 1.5;
  font-size: 0.875rem;
  background: linear-gradient(to bottom, #202020, #0000ff);
  /*linear-gradient nos permite configurar todo tipo de gradiantes 
  de dos o mas colores, sin la necesidad de usar imágenes */
  overflow: hidden;
  height: 1000px;
}
@media screen and (max-width: 600px){
    body{
        overflow: visible;
    }
}

.drop {
  position: absolute;
  bottom: 100%;
  width: 15px;
  height: 120px;
  pointer-events: none;
  animation: drop 0.5s linear infinite;
}

/*La regla arroba @keyframes permite a los autores controlar los pasos 
intermedios en una secuencia de animación CSS mediante el establecimiento 
de keyframes (o puntos de trayectoria) a lo largo de la secuencia de animación 
que debe ser alcanzado por determinados puntos durante la animación. */

@keyframes drop {
  0% {
    transform: translateY(0vh);
  }
  75% {
    transform: translateY(90vh);
  }
  100% {
    transform: translateY(90vh);
  }
}

.stem {
  width: 1px;
  height: 60%;
  margin-left: 7px;
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgb(156, 151, 151));
  animation: stem 0.5s linear infinite;
}

@keyframes stem {
  0% {
    opacity: 1;
  }
  65% {
    opacity: 1;
  }
  75% {
    opacity: 0.5;
  }
  100% {
    opacity: 0;
  }
}

h2 {
  letter-spacing: var(--spacing);
  text-transform: capitalize;
  line-height: 1.25;
  margin-bottom: 0.75rem;
  font-family: var(--ff-primary);
  font-size: 2rem;
}
p {
  margin-top: 0.5rem;
}

/*La regla-at CSS @media asocia un grupo de declaraciones anidadas, en un bloque 
CSS delimitado por llaves, con una condición definida por un media query. 
La regla-at @media puede ser usada no solo en el nivel superior de la hoja de 
estilos, sino también dentro de cualquier grupo de reglas conditionales */

@media screen and (min-width: 800px) {
  h2 {
    font-size: 2.5rem;
  }
  body {
    font-size: 1rem;
  }
  h2 {
    line-height: 1;
  }
}
/*  global classes */

.btn {
  text-transform: uppercase;
  background: transparent;
  color: var(--clr-black);
  padding: 0.375rem 0.75rem;
  letter-spacing: var(--spacing);
  display: inline-block;
  transition: var(--transition);
  font-size: 0.875rem;
  border: 2px solid var(--clr-black);
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  border-radius: var(--radius);
}
.btn:hover {
  color: var(--clr-white);
  background: var(--clr-black);
}
/* section */
.section {
  padding: 5rem 0;
}

.section-center {
  width: 90vw;
  margin: 0 auto;
  max-width: 1170px;
}
@media screen and (max-width: 600px) {
  .section-center {
    width: 95vw;
    margin-top: 560px;
  }
}
/*
=============== 
Questions
===============
*/
.title {
  margin-top: -32vh;
  margin-bottom: 15rem;
}
.title h2 {
  color: var(--clr-gold);
  font-family: "Great Vibes", cursive;
  text-align: center;
  margin-left: 400px;
  margin-top: -15px;
}
@media screen and (max-width: 600px) {
    .title h2{
        margin-left: 10px;
        margin-top: -15px;
    }
}
.section-center {
  max-width: var(--fixed-width);
}
.question {
  background: var(--clr-white);
  border-radius: var(--radius);
  box-shadow: var(--light-shadow);
  padding: 1.5rem 1.5rem 0 1.5rem;
  margin-bottom: 2rem;
  box-shadow: 0 0 20px red;
}
.question-title {
  display: flex;
  justify-content: space-between;
  align-items: center;
  text-transform: capitalize;
  padding-bottom: 1rem;
  background: white;
}

.question-title p {
  margin-bottom: 0;
  letter-spacing: var(--spacing);
  color: var(--clr-grey-1);
  background: white;
}
.question-btn {
  font-size: 1.5rem;
  background: transparent;
  border-color: transparent;
  cursor: pointer;
  color: #000000;
  transition: var(--transition);
}
.question-btn:hover {
  transform: rotate(90deg);
}
.question-text {
  padding: 1rem 0 1.5rem 0;
  border-top: 1px solid rgba(0, 0, 0, 0.2);
}
.question-text p {
  margin-bottom: 0;
  background: white;
}
/* hide text */
.question-text {
  display: none;
}
.show-text .question-text {
  display: block;
  background: white;
}
.minus-icon {
  display: none;
}
.show-text .minus-icon {
  display: inline;
}
.show-text .plus-icon {
  display: none;
}
